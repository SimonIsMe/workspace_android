package com.example.lista3;

import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;

import android.app.Service;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import android.view.View;

public class BluetoothService extends Service {

	private Timer updatingTimer;
	private TimerTask task;
	
	public BluetoothService() {
		super();
	}

	public void onCreate() {
		
	}
	
	public void onStart(Intent intent, int startid) {
		
	}
	
	@Override
    public void onDestroy() {
        super.onDestroy();
    }
	
	static public void checkBluetoothState() {
    	BluetoothAdapter mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
    	
    	if (mBluetoothAdapter == null) {
    		Blutooth.bluetoothTitle.setText("Bluetooth is not detected");
    		return;
    	}
    	
    	Log.i("moje", "Sprawdzam stan " + mBluetoothAdapter.getState());
    	switch (mBluetoothAdapter.getState()){
    		case BluetoothAdapter.STATE_TURNING_OFF:
    			Log.i("moje", "turning off");
    			Blutooth.onOff.setEnabled(false);
    			removeListOfDevices();
    			Blutooth.bluetoothTitle.setText("Bluetooth is turning off");
    			break;
    		case BluetoothAdapter.STATE_TURNING_ON:
    			Log.i("moje", "turning on");
    			Blutooth.onOff.setEnabled(false);
    			removeListOfDevices();
    			Blutooth.bluetoothTitle.setText("Bluetooth is turning on");
    			break;
    		case BluetoothAdapter.STATE_ON:
    			Log.i("moje", "is on");
    			createListOfDevices();
    			Blutooth.onOff.setEnabled(true);
    			Blutooth.bluetoothTitle.setText("Bluetooth is on");
    			break;
    		case BluetoothAdapter.STATE_OFF:
    			Log.i("moje", "is off");
    			Blutooth.onOff.setEnabled(true);
    			removeListOfDevices();
    			Blutooth.bluetoothTitle.setText("Bluetooth is off");
    			break;
    	}
    }
	
	static public void enableMenu() {
		
	}
	
	static public void diableMenu() {
		
	}
	
	static public void createListOfDevices() {
		BluetoothAdapter mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        
    	Set<BluetoothDevice> pairedDevices = mBluetoothAdapter.getBondedDevices();
    	hideListElements();
    	if (pairedDevices.size() > 0) {
    		int i = 0;
    	    for (BluetoothDevice device : pairedDevices) {
    	    	Blutooth.name[i].setVisibility(View.VISIBLE);
    	    	Blutooth.address[i].setVisibility(View.VISIBLE);
    	        Log.i("moje", device.getName() + " | " + device.getAddress());
    	    	Blutooth.name[i].setText(device.getName());
    	    	Blutooth.address[i].setText(device.getAddress());
    	    	i++;
    	    }
    	}
	}
	
	static public void removeListOfDevices() {
		hideListElements();
	}
	
	static public void hideListElements() {
		for (int i = 0; i < Blutooth.MAX_DEVICES; i++) {
			Blutooth.name[i].setVisibility(View.GONE);
			Blutooth.address[i].setVisibility(View.GONE);
		}
	}

	public IBinder onBind(Intent intent) {
		return null;
	}
	
}
